name: Deploy Frontend Resources to AWS

on:
    push:
        branches: main
    # pull_request:
    #     branches: main
jobs:
     deploy:
        name: Terraform Infrastructure + upload static website
        runs-on: ubuntu-latest

        env:
            AWS_REGION: 'us-east-1'
            TF_VERSION: '1.5.7'
            TFLINT_VERSION: '0.46.1'
            TFSEC_VERSION: '1.28.1'
        steps:
            - name: Checkout to GitHub Repo
              uses: actions/checkout@v2

            - name: Set up AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}
            - name: Setup  Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: ${{ env.TF_VERSION}}
            # - name: Install TFLint
            #   run: |
            #       curl -L https://github.com/terraform-linters/tflint/releases/download/v${{env.TFLINT_VERSION}}/tflint_linux_amd64
            #       curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
            #       unzip tflint.zip -d /usr/local/bin/
            #       tflint --version
            # - name: Install TFSec
            #   run: |
            #       curl -L https://github.com/tfsec/tfsec/releases/download/v${{env.TFSEC_VERSION}}/tfsec-linux-amd64
            #       chmod +x tfsec
            #       mv tfsec /usr/local/bin/
            #       tfsec --version

            #     # FRONTEND BUILD 
                
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with: 
                node-version: 20
            - name: Install Frontend Dependencies
              run: npm install
              
            - name: Build Frontend
              run: |
                npm run build
              # npm run export

            # - name: Deploy to S3
            #   run: |
            #     aws s3 sync ./out s3://artisan-linkup-static-frontend --delete


               # TERRAFORM STEPS

            - name: format Terraform files
              id: fmt_recursive
              run: terraform fmt -recursive
              working-directory: terraform-infra

            - name: Terraform format
              id: fmt
              run: terraform fmt -check -recursive
              working-directory: terraform-infra

            - name: Terraform Init
              id: init
              run: terraform init
              working-directory: terraform-infra

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color
              working-directory: terraform-infra

            # - name: TFLINT
            #   run: |
            #       tflint --init
            #       tflint

            # - name: Terraform Security Scan
            #   run: tfsec .

            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color  -out=tfplan
              working-directory: terraform-infra

            - name: Terraform Apply
              run: terraform apply -auto-approve tfplan
              working-directory: terraform-infra

            # Get bucket name from Terraform
            - name: Get s3 bucket name
              id: s3_bucket
              run: echo "bucket_name = $(terraform -chdir=./terraform-infra output -raw artisan-linkup-static-frontend)" >> GITHUB_ENV

            # upload frontend static files
            - name: upload frontend static files to s3
              run: |
                echo "uploading frontend files to artisan-linkup-static-frontend"
                aws s3 sync ./out s3://artisan-linkup-static-frontend --delete
